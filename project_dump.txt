
================================================================================
File: .\app.py
================================================================================

from flask import Flask, render_template, request, redirect, url_for, abort,flash
import mysql.connector, random, string

app = Flask(__name__)

# MySQL connection
db = mysql.connector.connect(
    host="localhost",
    user="root",
    password="root",
    database="movie_booking"
)
cursor = db.cursor(dictionary=True)
app.secret_key = "supersecretkey"
ADMIN_PASSWORD = "admin123"  # simple admin password

# Admin login check (super simple)
def check_admin(password):
    if password != ADMIN_PASSWORD:
        abort(401)  # Unauthorized


@app.route('/admin/dashboard')
def admin_dashboard():
    return render_template("admin_dashboard.html")


# Generate random ticket ID
def generate_ticket_id():
    return ''.join(random.choices(string.ascii_uppercase + string.digits, k=8))

@app.route('/admin/bookings')
def admin_bookings():
    password = request.args.get("password")
    check_admin(password)
    cursor.execute("""
        SELECT b.ticket_id, b.username, b.email, m.title, s.seat_no
        FROM bookings b
        JOIN movies m ON b.movie_id = m.id
        JOIN seats s ON b.seat_id = s.id
    """)
    bookings = cursor.fetchall()
    return render_template("admin_bookings.html", bookings=bookings)

@app.route('/admin/add_movie', methods=["GET", "POST"])
def add_movie():
    password = request.args.get("password")
    check_admin(password)
    if request.method == "POST":
        title = request.form["title"]
        cursor.execute("INSERT INTO movies (title) VALUES (%s)", (title,))
        db.commit()
        movie_id = cursor.lastrowid
        # Create seats for the movie
        for n in range(25):
            seat_no = chr(65 + n // 5) + str(n % 5 + 1)
            cursor.execute("INSERT INTO seats (movie_id, seat_no) VALUES (%s,%s)", (movie_id, seat_no))
        db.commit()
        flash("Movie added successfully!")
        return redirect(f"/admin/add_movie?password={password}")
    return render_template("add_movie.html")

@app.route('/', methods=["GET", "POST"])
def home():
    if request.method == "POST" and "admin_password" in request.form:
        password = request.form["admin_password"]
        if password == ADMIN_PASSWORD:
            return redirect(url_for("admin_dashboard"))
        else:
            flash("Incorrect admin password!")
            return redirect(url_for("home"))

    cursor.execute("SELECT * FROM movies")
    movies = cursor.fetchall()
    return render_template("index.html", movies=movies)

@app.route('/seats/<int:movie_id>')
def seats(movie_id):
    cursor.execute("SELECT * FROM movies WHERE id=%s", (movie_id,))
    movie = cursor.fetchone()
    cursor.execute("SELECT * FROM seats WHERE movie_id=%s", (movie_id,))
    seats = cursor.fetchall()
    return render_template("seats.html", movie=movie, seats=seats)

@app.route('/book/<int:movie_id>/<int:seat_id>', methods=["GET", "POST"])
def book(movie_id, seat_id):
    cursor.execute("SELECT * FROM seats WHERE id=%s", (seat_id,))
    seat = cursor.fetchone()
    if seat["is_booked"]:
        return "Seat already booked!"

    cursor.execute("SELECT * FROM movies WHERE id=%s", (movie_id,))
    movie = cursor.fetchone()

    if request.method == "POST":
        username = request.form["username"]
        email = request.form["email"]
        ticket_id = generate_ticket_id()

        # Mark seat as booked
        cursor.execute("UPDATE seats SET is_booked=TRUE WHERE id=%s", (seat_id,))
        # Save booking
        cursor.execute("INSERT INTO bookings (ticket_id, username, email, movie_id, seat_id) VALUES (%s,%s,%s,%s,%s)",
                       (ticket_id, username, email, movie_id, seat_id))
        db.commit()

        return redirect(url_for("ticket", ticket_id=ticket_id))

    return render_template("book.html", movie=movie, seat=seat)

@app.route('/ticket/<ticket_id>')
def ticket(ticket_id):
    cursor.execute("""SELECT b.ticket_id, b.username, b.email, m.title, s.seat_no 
                      FROM bookings b 
                      JOIN movies m ON b.movie_id=m.id 
                      JOIN seats s ON b.seat_id=s.id 
                      WHERE b.ticket_id=%s""", (ticket_id,))
    booking = cursor.fetchone()
    return render_template("ticket.html", booking=booking)

if __name__ == "__main__":
    app.run(debug=True)









================================================================================
File: .\dump_project.py
================================================================================

import os

# Set your project root (current folder)
project_root = "."

# Output file
output_file = "project_dump.txt"

# File extensions to include when dumping all files
include_exts = [".py", ".html", ".css", ".js", ".json", ".txt", ".md"]

# üîß If you want only specific files, list them here by name
# Example: only_files = ["views.py", "urls.py", "login.html"]
only_files = []   # put filenames here

with open(output_file, "w", encoding="utf-8") as outfile:
    for root, dirs, files in os.walk(project_root):
        if "venv" in dirs:
            dirs.remove("venv")
        if "__pycache__" in dirs:
            dirs.remove("__pycache__")

        for file in files:
            # ‚úÖ If only_files is set, include only those filenames
            if only_files and file not in only_files:
                continue

            # Otherwise filter by extension
            if not only_files and not any(file.endswith(ext) for ext in include_exts):
                continue

            filepath = os.path.join(root, file)
            try:
                with open(filepath, "r", encoding="utf-8") as infile:
                    outfile.write(f"\n{'='*80}\n")
                    outfile.write(f"File: {filepath}\n")
                    outfile.write(f"{'='*80}\n\n")
                    outfile.write(infile.read())
                    outfile.write("\n\n")
            except Exception as e:
                outfile.write(f"\n[Could not read {filepath}: {e}]\n")

print(f"‚úÖ File contents saved to {output_file}")
print("‚ÑπÔ∏è  Cleared only_files list after writing.")



================================================================================
File: .\project_dump.txt
================================================================================




================================================================================
File: .\requirements.txt
================================================================================

blinker==1.9.0
click==8.3.0
colorama==0.4.6
Flask==3.1.2
itsdangerous==2.2.0
Jinja2==3.1.6
MarkupSafe==3.0.3
mysql-connector-python==9.4.0
Werkzeug==3.1.3



================================================================================
File: .\templates\add_movie.html
================================================================================

<!DOCTYPE html>
<html>
<head><title>Add Movie</title></head>
<body>
<h1>Add Movie</h1>
<form method="POST">
    <label>Movie Title:</label>
    <input type="text" name="title" required>
    <button type="submit">Add</button>
</form>
<a href="/admin/bookings?password=admin123">View Bookings</a>
</body>
</html>



================================================================================
File: .\templates\admin_bookings.html
================================================================================

<!DOCTYPE html>
<html>
<head><title>All Bookings</title></head>
<body>
<h1>All Bookings</h1>
<table border="1">
<tr><th>Ticket ID</th><th>Name</th><th>Email</th><th>Movie</th><th>Seat</th></tr>
{% for b in bookings %}
<tr>
<td>{{ b.ticket_id }}</td>
<td>{{ b.username }}</td>
<td>{{ b.email }}</td>
<td>{{ b.title }}</td>
<td>{{ b.seat_no }}</td>
</tr>
{% endfor %}
</table>
</body>
</html>



================================================================================
File: .\templates\admin_dashboard.html
================================================================================

<!DOCTYPE html>
<html>
<head>
    <title>Admin Dashboard</title>
</head>
<body>
<h1>Admin Dashboard</h1>

<ul>
    <li><a href="/admin/add_movie?password=admin123">Add Movie</a></li>
    <li><a href="/admin/bookings?password=admin123">View All Bookings</a></li>
</ul>


<a href="/">Logout</a>
</body>
</html>



================================================================================
File: .\templates\book.html
================================================================================

<!DOCTYPE html>
<html>
<head><title>Book Seat</title></head>
<body>
    <h1>Book {{ seat.seat_no }} for {{ movie.title }}</h1>
    <form method="POST">
        <label>Name:</label><input type="text" name="username" required><br>
        <label>Email:</label><input type="email" name="email" required><br>
        <button type="submit">Confirm Booking</button>
    </form>
</body>
</html>



================================================================================
File: .\templates\index.html
================================================================================

<!DOCTYPE html>
<html>
<head>
    <title>Movie Booking</title>
</head>
<body>
<h1>Welcome to Movie Booking</h1>

<h2>Available Movies</h2>
<ul>
{% for movie in movies %}
    <li>{{ movie.title }} - <a href="/seats/{{ movie.id }}">View Seats</a></li>
{% endfor %}
</ul>

<hr>
<h2>Admin Panel</h2>
<form method="POST">
    <input type="password" name="admin_password" placeholder="Enter admin password" required>
    <button type="submit">Login as Admin</button>
</form>

{% with messages = get_flashed_messages() %}
  {% if messages %}
    <ul style="color:red;">
      {% for msg in messages %}
        <li>{{ msg }}</li>
      {% endfor %}
    </ul>
  {% endif %}
{% endwith %}

</body>
</html>



================================================================================
File: .\templates\seats.html
================================================================================

<!DOCTYPE html>
<html>
<head>
    <title>Seats</title>
    <style>
        .seat { display: inline-block; width: 40px; height: 40px; margin: 5px; text-align: center; line-height: 40px; border: 1px solid black; cursor: pointer; }
        .booked { background-color: red; color: white; cursor: not-allowed; }
        .available { background-color: lightgreen; }
    </style>
</head>
<body>
    <h1>Seats for {{ movie.title }}</h1>
    <div>
    {% for seat in seats %}
        <div class="seat {% if seat.is_booked %}booked{% else %}available{% endif %}">
            {% if seat.is_booked %}
                {{ seat.seat_no }}
            {% else %}
                <a href="/book/{{ movie.id }}/{{ seat.id }}">{{ seat.seat_no }}</a>
            {% endif %}
        </div>
        {% if loop.index % 5 == 0 %}<br>{% endif %}
    {% endfor %}
    </div>
</body>
</html>



================================================================================
File: .\templates\ticket.html
================================================================================

<!DOCTYPE html>
<html>
<head>
    <title>Ticket</title>
</head>
<body>
    <h1>üéü Your Ticket</h1>
    <p><b>Ticket ID:</b> {{ booking.ticket_id }}</p>
    <p><b>Name:</b> {{ booking.username }}</p>
    <p><b>Email:</b> {{ booking.email }}</p>
    <p><b>Movie:</b> {{ booking.title }}</p>
    <p><b>Seat:</b> {{ booking.seat_no }}</p>
</body>
</html>


